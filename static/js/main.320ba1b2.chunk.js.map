{"version":3,"sources":["Components/SuperInputText/SuperInputText.module.css","Components/SuperButton/SuperButton.module.css","Components/SuperCheckbox/SuperCheckbox.module.css","Components/SuperButton/SuperButton.tsx","Components/SuperInputText/SuperInputText.tsx","Components/SuperCheckbox/SuperCheckbox.tsx","Pages/ComponentView/ComponentView.tsx","Pages/Login/Login.tsx","Pages/Profile/Profile.tsx","Pages/Registration/Registration.tsx","Pages/RecoverPassword/RecoverPassword.tsx","Pages/AddPassword/AddPassword.tsx","Pages/Page404/Page404.tsx","Pages/Links/Links.tsx","App.tsx","reportWebVitals.ts","BLL/Reducers/Auth-reducer.ts","BLL/Reducers/Login-reducer.ts","BLL/Reducers/Profile-reducer.ts","BLL/redux-store.ts","index.tsx","Pages/Links/Links.module.css"],"names":["module","exports","SuperButton","red","error","className","restProps","finalClassName","s","default","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","inputclassName","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","input_wrapper","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","ComponentView","Login","Profile","Registration","RecoverPassword","AddPassword","Page404","Links","links__container","to","activeClassName","link__active","link__default","App","exact","path","render","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","auth","state","login","profile","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,8BAA8B,cAAgB,wC,mBCAxKD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,mBCA/DD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,4KC4B9DC,EAlBqC,SAAC,GAO/C,IALEC,EAKH,EALGA,IAEAC,GAGH,EAJGC,UAIH,EAHGD,OACGE,EAEN,2CACKC,EAAc,UAAOH,EAAK,UAAMD,EAAMK,IAAEL,IAAM,IAAMK,IAAEC,QAAxC,YAAmDD,IAAEC,SAEzE,OACI,oCACIJ,UAAWE,GACPD,K,iBCsCDI,EA9C2C,SAAC,GAatD,EAXGC,KAWF,IAVEC,EAUH,EAVGA,SACAC,EASH,EATGA,aACAC,EAQH,EARGA,WACAC,EAOH,EAPGA,QACAX,EAMH,EANGA,MACAY,EAKH,EALGA,eACAC,EAIH,EAJGA,cAEGX,EAEN,kHAeKY,EAAkB,UAAMV,IAAEJ,MAAR,YAAiBa,GAAgC,IACnEE,EAA2B,UAALf,EAAWI,IAAEY,WAAkBJ,GAAkCR,IAAEa,YAE/F,OACI,sBAAKhB,UAAWG,IAAEc,cAAlB,UACI,mCACIX,KAAM,OACNC,SArBa,SAACW,GACtBX,GACGA,EAASW,GAEZV,GAAgBA,EAAaU,EAAEC,cAAcC,QAkBrCX,WAhBe,SAACS,GACxBT,GAAcA,EAAWS,GAEf,UAAVA,EAAEG,KACCX,GACAA,KAYKV,UAAWc,GAEPb,IAEPF,GAAS,sBAAMC,UAAWa,EAAjB,SAAsCd,Q,iBCb7CuB,EAhCyC,SAAC,GASpD,EAPGhB,KAOF,IANEC,EAMH,EANGA,SAAUgB,EAMb,EANaA,gBACVvB,EAKH,EALGA,UACAwB,GAIH,EALcZ,cAKd,EAJGY,UAEGvB,EAEN,4FAOKa,EAAmB,UAAMX,IAAEsB,SAAR,YAAoBzB,GAAwB,IAErE,OACI,kCACI,mCACIM,KAAM,WACNC,SAZa,SAACW,GACtBK,GAAmBA,EAAgBL,EAAEC,cAAcO,SACnDnB,GAAYA,EAASW,IAWblB,UAAWc,GAEPb,IAEPuB,GAAY,sBAAMxB,UAAWG,IAAES,cAAnB,SAAmCY,QCX7CG,EAtBO,WAClB,OACI,gCACI,mDACA,gCACI,wCACI,cAAC,EAAD,wBAER,gCACI,uCACA,cAAC,EAAD,OAEJ,gCACI,0CACA,cAAC,EAAD,OAEJ,uBACA,2B,OCVGC,EAVD,WACV,OACI,gCACI,4CACA,uBACA,2BCKGC,EAVC,WACZ,OACI,gCACI,8CACA,uBACA,2BCKGC,EAVM,WACjB,OACI,gCACI,8CACA,uBACA,2BCKGC,EAVS,WACpB,OACI,gCACI,iDACA,uBACA,2BCKGC,EAVK,WAChB,OACI,gCACI,6CACA,uBACA,2BCGGC,EARC,WACZ,OACI,yB,uBCaOC,EAbD,WACV,OACI,sBAAKlC,UAAWG,IAAEgC,iBAAlB,UACI,cAAC,IAAD,CAASC,GAAI,kBAAmBC,gBAAiBlC,IAAEmC,aAActC,UAAWG,IAAEoC,cAA9E,qBACA,cAAC,IAAD,CAASH,GAAI,SAAUC,gBAAiBlC,IAAEmC,aAActC,UAAWG,IAAEoC,cAArE,mBACA,cAAC,IAAD,CAASH,GAAI,WAAYC,gBAAiBlC,IAAEmC,aAActC,UAAWG,IAAEoC,cAAvE,qBACA,cAAC,IAAD,CAASH,GAAI,gBAAiBC,gBAAiBlC,IAAEmC,aAActC,UAAWG,IAAEoC,cAA5E,0BACA,cAAC,IAAD,CAASH,GAAI,WAAYC,gBAAiBlC,IAAEmC,aAActC,UAAWG,IAAEoC,cAAvE,qBACA,cAAC,IAAD,CAASH,GAAI,YAAaC,gBAAiBlC,IAAEmC,aAActC,UAAWG,IAAEoC,cAAxE,yBCoBGC,MArBf,WAEI,OACI,sBAAKxC,UAAU,MAAf,UACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOyC,OAAK,EAACC,KAAM,IAAKC,OAAQ,kBAAM,cAAC,IAAD,CAAUP,GAAI,uBACpD,cAAC,IAAD,CAAOM,KAAM,kBAAmBC,OAAQ,kBAAM,cAAC,EAAD,OAC9C,cAAC,IAAD,CAAOD,KAAM,SAAUC,OAAQ,kBAAM,cAAC,EAAD,OACrC,cAAC,IAAD,CAAOD,KAAM,WAAYC,OAAQ,kBAAM,cAAC,EAAD,OACvC,cAAC,IAAD,CAAOD,KAAM,gBAAiBC,OAAQ,kBAAM,cAAC,EAAD,OAC5C,cAAC,IAAD,CAAOD,KAAM,WAAYC,OAAQ,kBAAM,cAAC,EAAD,OACvC,cAAC,IAAD,CAAOD,KAAM,YAAaC,OAAQ,kBAAM,cAAC,EAAD,OACxC,cAAC,IAAD,CAAOD,KAAM,IAAKC,OAAQ,kBAAM,cAAC,EAAD,OAChC,cAAC,IAAD,CAAUC,KAAM,IAAKR,GAAI,gBCZ1BS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCNVQ,EAAe,GCAfA,EAAe,GCAfA,EAAe,GCIfC,EAAcC,YAAgB,CAC9BC,KHFuB,WAAqC,IAApCC,EAAmC,uDAAjBJ,EAC1C,OAAOI,GGEPC,MFHwB,WAAsC,IAArCD,EAAoC,uDAAjBJ,EAC5C,OAAOI,GEGPE,QDJ0B,WAAwC,IAAvCF,EAAsC,uDAAjBJ,EAChD,OAAOI,KCUIG,EAFHC,YAAYP,EAAaQ,YAAgBC,M,QCNrDC,IAAStB,OACL,cAAC,IAAMuB,WAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACI,cAAC,EAAD,UAIZM,SAASC,eAAe,SAG5BvB,K,kBCnBAlD,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,iBAAmB,gCAAgC,aAAe,+B","file":"static/js/main.320ba1b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2Pmg8\",\"errorInput\":\"SuperInputText_errorInput__1dxM8\",\"error\":\"SuperInputText_error__Po8__\",\"input_wrapper\":\"SuperInputText_input_wrapper__VAy57\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__171CZ\",\"red\":\"SuperButton_red__3n7Kb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__gfnxy\",\"spanClassName\":\"SuperCheckbox_spanClassName__1Rpq3\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean,\n    error?: string\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red,\n        className,\n        error,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName =  `${error ? `${red ? s.red : ''}`: s.default} ${s.default}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    inputclassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange,\n        onChangeText,\n        onKeyPress,\n        onEnter,\n        error,\n        inputclassName,\n        spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    };\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    };\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = error ? `${s.errorInput}` : `${inputclassName ? inputclassName : s.superInput}`;\n\n    return (\n        <div className={s.input_wrapper}>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </div>\n    );\n};\n\nexport default SuperInputText;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n        onChange && onChange(e)\n    };\n\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React from \"react\";\nimport s from './ComponentView.module.css'\nimport SuperButton from \"../../Components/SuperButton/SuperButton\";\nimport SuperInputText from \"../../Components/SuperInputText/SuperInputText\";\nimport SuperCheckbox from \"../../Components/SuperCheckbox/SuperCheckbox\";\n\nconst ComponentView = () => {\n    return (\n        <div>\n            <h1>Component preview</h1>\n            <div>\n                <h3>Button</h3>\n                    <SuperButton>Button</SuperButton>\n            </div>\n            <div>\n                <h3>Input</h3>\n                <SuperInputText/>\n            </div>\n            <div>\n                <h3>Checkbox</h3>\n                <SuperCheckbox/>\n            </div>\n            <hr/>\n            <hr/>\n        </div>\n    )\n}\n\nexport default ComponentView;","import React from \"react\";\nimport s from './Login.module.css'\n\nconst Login = () => {\n    return (\n        <div>\n            <h1>Login Page</h1>\n            <hr/>\n            <hr/>\n        </div>\n    )\n}\n\nexport default Login;","import React from \"react\";\nimport s from './Profile.module.css'\n\nconst Profile = () => {\n    return (\n        <div>\n            <h1>Profile Page</h1>\n            <hr/>\n            <hr/>\n        </div>\n    )\n}\n\nexport default Profile;","import React from \"react\";\nimport s from './Registration.module.css'\n\nconst Registration = () => {\n    return (\n        <div>\n            <h1>Registration</h1>\n            <hr/>\n            <hr/>\n        </div>\n    )\n}\n\nexport default Registration;","import React from \"react\";\nimport s from './RecoverPassword.module.css'\n\nconst RecoverPassword = () => {\n    return (\n        <div>\n            <h1>RecoverPassword</h1>\n            <hr/>\n            <hr/>\n        </div>\n    )\n}\n\nexport default RecoverPassword;","import React from \"react\";\nimport s from './AddPassword.module.css'\n\nconst AddPassword = () => {\n    return (\n        <div>\n            <h1>AddPassword</h1>\n            <hr/>\n            <hr/>\n        </div>\n    )\n}\n\nexport default AddPassword;","import React from \"react\";\nimport s from './404.module.css'\n\nconst Page404 = () => {\n    return (\n        <div>\n\n        </div>\n    )\n}\n\nexport default Page404;","import React from \"react\";\nimport s from './Links.module.css';\nimport {NavLink} from \"react-router-dom\";\n\n\nconst Links = ()=> {\n    return (\n        <div className={s.links__container}>\n            <NavLink to={'/component-view'} activeClassName={s.link__active} className={s.link__default}>Preview</NavLink>\n            <NavLink to={'/login'} activeClassName={s.link__active} className={s.link__default}>Login</NavLink>\n            <NavLink to={'/profile'} activeClassName={s.link__active} className={s.link__default}>Profile</NavLink>\n            <NavLink to={'/registration'} activeClassName={s.link__active} className={s.link__default}>Registration</NavLink>\n            <NavLink to={'/recover'} activeClassName={s.link__active} className={s.link__default}>Recover</NavLink>\n            <NavLink to={'/add-pass'} activeClassName={s.link__active} className={s.link__default}>AddPass</NavLink>\n        </div>\n    )\n}\n\nexport default Links","import React, {useEffect} from 'react';\nimport './App.css';\nimport ComponentView from \"./Pages/ComponentView/ComponentView\";\nimport {Route, Switch, Redirect} from 'react-router-dom'\nimport Login from \"./Pages/Login/Login\";\nimport Profile from \"./Pages/Profile/Profile\";\nimport Registration from \"./Pages/Registration/Registration\";\nimport RecoverPassword from './Pages/RecoverPassword/RecoverPassword';\nimport AddPassword from \"./Pages/AddPassword/AddPassword\";\nimport Page404 from \"./Pages/Page404/Page404\";\nimport Links from \"./Pages/Links/Links\";\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <Links/>\n            <Switch>\n                <Route exact path={'/'} render={() => <Redirect to={'/component-view'}/>} />\n                <Route path={'/component-view'} render={() => <ComponentView/>} />\n                <Route path={'/login'} render={() => <Login/>} />\n                <Route path={'/profile'} render={() => <Profile/>} />\n                <Route path={'/registration'} render={() => <Registration/>} />\n                <Route path={'/recover'} render={() => <RecoverPassword/>} />\n                <Route path={'/add-pass'} render={() => <AddPassword/>} />\n                <Route path={'*'} render={() => <Page404/>} />\n                <Redirect from={'*'} to={'/404'}/>\n            </Switch>\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","type AuthType = typeof initialState\n\n\nlet initialState = {};\n\n\nexport const AuthReducer = (state: AuthType = initialState) => {\n    return state\n};","type LoginType = typeof initialState\n\n\nlet initialState = {};\n\n\nexport const LoginReducer = (state: LoginType = initialState) => {\n    return state\n};","type ProfileType = typeof initialState\n\n\nlet initialState = {};\n\n\nexport const ProfileReducer = (state: ProfileType = initialState) => {\n    return state\n};","import {combineReducers, createStore, applyMiddleware} from \"redux\";\nimport thunkMiddleware from 'redux-thunk'\nimport {AuthReducer} from \"./Reducers/Auth-reducer\";\nimport {LoginReducer} from \"./Reducers/Login-reducer\";\nimport {ProfileReducer} from \"./Reducers/Profile-reducer\";\n\n\nlet rootReducer = combineReducers({\n    auth: AuthReducer,\n    login: LoginReducer,\n    profile: ProfileReducer\n})\n\nexport type RootStateType = ReturnType<typeof rootReducer>\n\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./BLL/redux-store\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link__default\":\"Links_link__default__17Rk0\",\"links__container\":\"Links_links__container__3ULab\",\"link__active\":\"Links_link__active__2WpzH\"};"],"sourceRoot":""}